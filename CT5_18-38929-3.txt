user create:
1.CREATE USER Dumbledore IDENTIFIED BY phoenix
2.GRANT UNLIMITED TABLESPACE TO Dumbledore
3.GRANT  create table TO Dumbledore

4.CREATE TABLE STUDENT
(
S_ID NUMBER(5),
S_NAME VARCHAR(20), 
S_CGPA NUMBER(8),
S_BLOODSTATUS VARCHAR (20),
H_NO NUMBER (5),
PRIMARY KEY(S_ID),
FOREGIAN KEY(H_NO) REFERENCES HOUSE(H_ID)
);

INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(2,' Harry', 3.45 ,'Halfblood', 11)
INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(7,' Ron', 3.01 ,'Pureblood' 11)
INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(12 ,'Hannah', ,'Pureblood', 22)
INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(17,'Cedric', 3.78 ,'Pureblood', 22)
INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(22 ,'Cho', 3.55 ,'Muggleborn', 33)
INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(27,' Luna', 2.89,'', 33)
INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(32,' Draco', 3.88, 'Pureblood', 44)
INSERT INTO STUDENT(S_Id,S_Name,S_CGPA,S_BloodStatus,H_No)
VALUES(37,'Goyle', 2.10,' Pureblood', 44)

5.CREATE TABLE HOUSE
(
H_ID NUMBER(5),
H_NAME VARCHAR(20) NOT NULL, 
H_POINTS NUMBER(8),
PRIMARY KEY(H_ID)
);

INSERT INTO HOUSE(H_ID,H_NAME,H_POINTS)
VALUES(11,'Gryffindor',892)
INSERT INTO HOUSE(H_ID,H_NAME,H_POINTS)
VALUES(22,'Hufflepuf',785)
INSERT INTO HOUSE(H_ID,H_NAME,H_POINTS)
VALUES(33,'Ravenclaw',789)
INSERT INTO HOUSE(H_ID,H_NAME,H_POINTS)
VALUES(44,'Slytherin ',850)


-using ARITHMETIC operator>>
QUES: FIND THE NAME,CGPA AND CGPA INCREASE .10  OF STUDENT 

SOL: SELECT S_NAME,S_CGPA,S_CGPA+.10 FROM STUDENT 

-using CONCATENATION operator
QUES:SHOW STUDENT NAME AND CGPA IN A WORD

SOL: SELECT S_NAME || S_CGPA FROM STUDENT

using COLUMN ALIAS:

QUES: SHOW STUDENT TABLE WHERE S_NAME AS NAME AND S_CGPA AS CGPA.
 SOL:SELECT S_NAME AS NAME,S_CGPA "CGPA" FROM STUDENT

-using LIKE operator
QUES: SHOW HOUSE NAME WHICH START WITH LETTER R
 SELECT H_NAME FROM HOUSE WHERE H_NAME LIKE 'R%'

using IS NULL operator
FIND STUDENT NAME WHICH CGPA IS NULL
SOL: SELECT S_NAME FROM STUDENT WHERE S_CGPA IS NULL

-using ORDER BY clause
SHOW STUDENT NAME ACCORDING TO CGPA IN DESCENDING ORDER
SOL: SELECT S_NAME FROM STUDENT ORDER BY S_CGPA DESC

-using SUBSTR function
 MAKE STUDENT NAME Hannah TO HAN USING SUBSTR 
SOL:SELECT SUBSTR('HANNAN',1,3) FROM STUDENT

-using NVL function
SHOW AVG CGPA FROM STUDENT TABLE WHERE NULL IS CONSIDER 0
SOL:SELECT AVG(NVL(S_CGPA,0)) FROM STUDENT

-using MAX function
SHOW HIGHEST CGPA FROM STUDENT TABLE
SOL:SELECT MAX(S_CGPA) FROM STUDENT

-using SUM function
SHOW TOTAL CGPA FROM STUDENT TABLE
SOL:SELECT SUM(S_CGPA) FROM STUDENT

-using GROUP BY clause
FIND OUT MAX CGPA AND NAME GROUP BY HOUSE NO
SOL:SELECT MAX(S_CGPA),S_NAME FROM STUDENT GROUP BY H_NO

-using HAVING clause
FIND OUT MAX CGPA AND NAME GROUP BY HOUSE NO WHERE MAX CGPA IS GREATER THAN 3.50
SOL:SELECT MAX(S_CGPA),S_NAME FROM STUDENT GROUP BY H_NO HAVING MAX(S_CGPA)>3.50
