1.SELECT EMPLOYEES.EMPNAME, DEPARTMENT.LOCATION  FROM EMPLOYEES, DEPARTMENT WHERE (EMPLOYEES.DEPTID = DEPARTMENT.DEPTID AND DEPARTMENT.LOCATION = 'BOSTON');

2.SELECT	a.EMPID, a.EMPNAME,a.MGR, a.HIREDATE FROM EMPLOYEES 
		
a (SELECT e.EMPID, m.EMPID AS MGR, m.HIREDATE  FROM EMPLOYEES e, EMPLOYEES m WHERE (e.MGR = m.EMPID))
b WHERE (a.EMPID = b.EMPID AND a.HIREDATE > b.HIREDATE);	

3.SELECT   z.EMPID, z.EMPNAME,

		      CASE WHEN  		mgr.EMPNAME  is null	THEN  'N O N E'  
    		       ELSE		mgr.EMPNAME 
		      END   AS		MANAGER,
	
		     CASE WHEN  		z.MGR  is null 		THEN  0
    		      ELSE		z.MGR 
    		       END  AS    		MGR
FROM    EMPLOYEES  z, EMPLOYEES mgr    WHERE   ( z.MGR = mgr.EMPID (+) );

4.SELECT EMPLOYEES.EMPNAME, EMPLOYEES.HIREDATE, EMPLOYEES.SALARY, SALGRADE.GRADE  FROM EMPLOYEES, SALGRADE  WHERE (EMPLOYEES.GRADE = SALGRADE.GRADE)	ORDER BY GRADE DESC;

5.SELECT		DEPARTMENT.DEPTID,EMPLOYEES.EMPNAME	"EMPLOYEES",DEPARTMENT.DEPTNAME	"DEPARTMENTS",DEPARTMENT.LOCATION FROM EMPLOYEES, DEPARTMENT WHERE 	(EMPLOYEES.DEPTID = DEPARTMENT.DEPTID)		ORDER BY DEPTID ASC;


		) ;
********************************** TABLE Loan *******************************************

CREATE TABLE LOAN
		(
			LOAN_NUMBER 		VARCHAR2(5) 	CONSTRAINT PK_LOAN PRIMARY KEY NOT NULL,
			BRANCH_NAME		VARCHAR2(14)	NOT NULL,
			AMOUNT_OF_LOAN	NUMBER(7,2) 
********Insert DATA Into LOAN TABLE	************************
>>>	INSERT INTO LOAN VALUES ('L-170',	'DownTown',	3000);
>>>	INSERT INTO LOAN VALUES ('L-230',	'RedWood',	4000);
>>>	INSERT INTO LOAN VALUES ('L-260',	'PerryRidge',	1700);

******************TABLE BORROW *************************
CREATE TABLE BORROWER
		(
			BORROWER_NAME		VARCHAR2(20)		CONSTRAINT PK_BORROWER PRIMARY KEY,
			LOAN_NUMBER		VARCHAR2(14)		CONSTRAINT FK_LOAN_NUMBER REFERENCES LOAN
		) ;

********************INSERT INTO BORROWER TABLE***************************

>>>	INSERT INTO BORROWER VALUES ('JONES',	'L-170');	
>>>	INSERT INTO BORROWER VALUES ('SMiTH',	'L-230');
>>>	INSERT INTO BORROWER VALUES ('HAYES',	'L-260');

*******OUTER JOIN***************
>>>	SELECT BORROWER_NAME, L.LOAN_NUMBER, BRANCH_NAME, AMOUNT_OF_LOAN
		FROM BORROWER B
		LEFT OUTER JOIN LOAN L
		ON (B.LOAN_NUMBER = L.LOAN_NUMBER);

*******RIGHT OUTER **************
>>>	SELECT BORROWER_NAME, L.LOAN_NUMBER, BRANCH_NAME, AMOUNT_OF_LOAN 
		FROM LOAN L
		RIGHT OUTER JOIN BORROWER B
		ON (B.LOAN_NUMBER = L.LOAN_NUMBER);
*********FULL**************
>>>	SELECT BORROWER_NAME, L.LOAN_NUMBER, BRANCH_NAME, AMOUNT_OF_LOAN 
		FROM LOAN L
		FULL OUTER JOIN BORROWER B
		ON (B.LOAN_NUMBER = L.LOAN_NUMBER);

*************CROSS JOIN******************
7.>>>	SELECT EMPLOYEES.EMPNAME, SALGRADE.GRADE  FROM EMPLOYEES CROSS JOIN SALGRADE 
	WHERE (EMPLOYEES.GRADE = SALGRADE.GRADE)	ORDER BY GRADE DESC;


8.>>>SELECT EMPNAME "EMPLOYEES", DEPTNAME "DEPARTMENT" FROM EMPLOYEES NATURAL JOIN DEPARTMENT 
		WHERE DEPTNAME IN ('ACCOUNTING');

9.>>>SELECT EMPNAME,DEPTNAME, LOCATION, DEPTID FROM EMPLOYEES  JOIN DEPARTMENT USING (DEPTID) 
WHERE (DEPTID != 20) ORDER BY DEPTNAME ASC;

10.SELECT	EMPNAME "EMPLOYEES",  DEPTNAME "DEPARTMENT", SALARY, GRADE  FROM EMPLOYEES N JOIN DEPARTMENT O ON N.DEPTID = O.DEPTID 
ORDER BY SALARY ASC;






















